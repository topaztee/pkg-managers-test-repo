image: Visual Studio 2019
init:
  - git config --global core.autocrlf input

install:
  - ps: Invoke-WebRequest 'https://dot.net/v1/dotnet-install.ps1' -OutFile "${env:TEMP}\dotnet-install.ps1"
  - ps: $sdkVersionFromGlobalJson = (Get-Content -Raw -Path 'global.json' | Out-String | ConvertFrom-Json).sdk.version
  - ps: '& "${env:TEMP}\dotnet-install.ps1" -Version $sdkVersionFromGlobalJson'

build_script:
  - cmd: build.cmd BuildPackage

test: off
version: 0.0.1.{build}
artifacts:
  - path: bin
    name: bin
  - path: bin_bootstrapper
    name: bin_bootstrapper
  - path: 'temp\*.nupkg'
    type: NuGetPackage
    name: nupkgs
  - path: 'tests_result\**\*.trx'
    name: TestResults
    type: zip
nuget:
  account_feed: false
  project_feed: true

environment:
  matrix:
    # run .net integration tests
    - SkipIntegrationTestsNetCore: true
      PAKET_TESTSUITE_FLAKYTESTS: false
    # run .net core integration tests
    - SkipIntegrationTestsNet: true
      PAKET_TESTSUITE_FLAKYTESTS: false
    # just flaky tests
    - PAKET_TESTSUITE_FLAKYTESTS: true

matrix:
  allow_failures:
    - PAKET_TESTSUITE_FLAKYTESTS: true

on_finish:
  - ps: >-
      $wc = New-Object 'System.Net.WebClient';
      $testResults = @(
        '.\tests_result\net\Paket.Tests\TestResult.trx'
        '.\tests_result\net\Paket.IntegrationTests\TestResult.trx'
        '.\tests_result\net\Paket.Bootstrapper.Tests\TestResult.trx'
        '.\tests_result\netcore\Paket.Tests\TestResult.trx'
        '.\tests_result\netcore\Paket.IntegrationTests\TestResult.trx'
        '.\tests_result\netcore\Paket.Bootstrapper.Tests\TestResult.trx'
      )
  - ps: >-
      Foreach ($path in $testResults) {
        If (Test-Path $path) {
          $wc.UploadFile("https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $path))
        }
      }
